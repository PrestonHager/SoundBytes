service: soundbytes

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: python3.6

# you can overwrite defaults here
  stage: ${opt:stage, 'dev'}
  region: us-west-2

# you can add statements to the Lambda function's IAM Role here
  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "s3:PutObject"
      Resource: arn:aws:s3:::soundbytes-bites/*
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
      Resource: arn:aws:dynamodb:*:*:table/soundbytes-bites-metadata
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: arn:aws:dynamodb:*:*:table/soundbytes-auth
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
      Resource: arn:aws:dynamodb:*:*:table/soundbytes-users
    - Effect: Allow
      Action:
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource: arn:aws:dynamodb:*:*:table/soundbytes-verify
    - Effect: Allow
      Action:
        - ses:SendEmail
      Resource: arn:aws:ses:*:*:identity/*

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  include:
#    - include-me.py
#    - include-me-dir/**
#  exclude:
#    - exclude-me.py
#    - exclude-me-dir/**

functions:
  get-bites:
    handler: get_bites.run
    events:
      - http:
          path: get-bites
          method: get
  verify-email:
    handler: verify_email.run
    events:
      - http:
          path: verify
          method: get
  auth:
    handler: auth.run
    events:
      - http:
          path: auth
          method: post
  create-account:
    handler: create_account.run
    events:
      - http:
          path: create-account
          method: post
  refresh-client:
    handler: refresh_client.run
    events:
      - http:
          path: refresh-client
          method: post
  upload-bite:
    handler: upload_bite.run
    events:
      - http:
          path: upload-bite
          method: post

#    Define function environment variables here
#    environment:
#      variable2: value2

# you can add CloudFormation resource templates here
resources:
  Resources:
   S3Bucket:
     Type: AWS::S3::Bucket
     Properties:
       BucketName: soundbytes-bites
   DynamoDBTable:
     Type: AWS::DynamoDB::Table
     Properties:
       TableName: soundbytes-bites-metadata
       AttributeDefinitions:
          - AttributeName: BiteId
            AttributeType: S
       KeySchema:
          - AttributeName: BiteId
            KeyType: HASH
       ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
   DynamoDBTableAuth:
     Type: AWS::DynamoDB::Table
     Properties:
       TableName: soundbytes-auth
       AttributeDefinitions:
          - AttributeName: ClientId
            AttributeType: S
       KeySchema:
          - AttributeName: ClientId
            KeyType: HASH
       ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
   DynamoDBTableUsers:
     Type: AWS::DynamoDB::Table
     Properties:
       TableName: soundbytes-users
       AttributeDefinitions:
          - AttributeName: Username
            AttributeType: S
       KeySchema:
          - AttributeName: Username
            KeyType: HASH
       ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
   DynamoDBTableVerify:
     Type: AWS::DynamoDB::Table
     Properties:
       TableName: soundbytes-verify
       AttributeDefinitions:
         - AttributeName: LinkId
           AttributeType: S
       KeySchema:
         - AttributeName: LinkId
           KeyType: HASH
       ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
